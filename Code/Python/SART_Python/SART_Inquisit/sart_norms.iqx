<usermanual>
						
											SART Helper Script: 
						Calculating z-scores and percentile for SART performance measures

SCRIPT INFO

Script Author: Katja Borchert, Ph.D. (katjab@millisecond.com) for Millisecond Software, LLC
Date: 08-12-2016
last updated: 08-12-2016 by K.Borchert (katjab@millisecond.com) for Millisecond Software LLC

Script Copyright © 08-12-2016 Millisecond Software


BACKGROUND INFO 

											*Purpose*
This helper script for SART.iqx implements code to calculate z-scores and percentiles for SART performance measures.
The data used by this script are published in:

Carriere, J.S.A., Cheyne, J.A., Solman, G.J.F. & Smilek, D. (2010). 
Age Trends for Failures of Sustained Attention. Psychology and Aging, 25, 569–574.
(table 2, p. 572)

This script does not run on its own but is included in SART.iqx

NORMS
Carriere et al (2010) report means and standard deviations by 6 age groups (ages ranged
from 14 to 77 years, overall N=638),for the following SART performance measures:
- SART errors (commission errors)
- Omission errors
- number of Anticipatory Responses
- mean go reaction time
- mean reaction time coefficient of variation 

Carriere et al (2010) as well as Chan (2001) report no significant gender differences.

</usermanual>

**************************************************************************************************************
				!!!REMAINING CODE: Customize after careful consideration only!!!
**************************************************************************************************************

**************************************************************************************************************
**************************************************************************************************************
	VALUES: automatically updated
**************************************************************************************************************
**************************************************************************************************************
                                    
/ageGroup:				stores the assigned age group (1-6) based on age response

Summary Variables: z-scores and corresponding percentile variables
/z_Commission = 0
/percentile_Commission = 0
/z_Omission = 0
/percentile_Omission = 0
/z_goRT = 0
/percentile_goRT = 0
/z_CV = 0
/percentile_CV = 0
/z_AnticipatoryResponses = 0
/percentile_AnticipatoryResponses = 0

<values>
/ageGroup = 0
/z_Commission = 0
/percentile_Commission = 0
/z_Omission = 0
/percentile_Omission = 0
/z_goRT = 0
/percentile_goRT = 0
/z_CV = 0
/percentile_CV = 0
/z_AnticipatoryResponses = 0
/percentile_AnticipatoryResponses = 0
</values>

**************************************************************************************************************
**************************************************************************************************************
	EXPRESSIONS
**************************************************************************************************************
**************************************************************************************************************

/calculate_Norms: 	calculates z-scores and percentiles for 
					Commission Errors, Omission Errors, Number of Anticipatory Responses, go latencies, 
					reaction time coefficient of variation 
					based on data published by Carriere et al (2010)

<expressions>
/calculate_Norms = {
	values.z_Commission = (expressions.nr_commissions - list.mean_SARTerrors.nextvalue)/list.SD_SARTerrors.nextvalue;
	values.percentile_Commission = pofz(values.z_Commission);
	values.z_Omission = (expressions.nr_omissions - list.mean_Omissions.nextvalue)/list.SD_Omissions.nextvalue;
	values.percentile_Omission = pofz(values.z_Omission);	
	values.z_AnticipatoryResponses = (values.count_anticipatory - list.mean_Anticipatory.nextvalue)/list.SD_Anticipatory.nextvalue;
	values.percentile_AnticipatoryResponses = pofz(values.z_AnticipatoryResponses);	
	values.z_GoRT = (expressions.meanRT_go - list.mean_RT.nextvalue)/list.SD_RT.nextvalue;
	values.percentile_GoRT = pofz(values.z_GoRT);		
	values.z_CV = (expressions.CV_go - list.mean_RTCV.nextvalue)/list.SD_RTCV.nextvalue;
	values.percentile_CV = pofz(values.z_CV);	
}
</expressions>

**************************************************************************************************************
**************************************************************************************************************
	STIMULI
**************************************************************************************************************
**************************************************************************************************************

<dropdown age>
/ caption = "Please, indicate your age."
/ options = ("19 and younger", "20-29", "30-39", "40-49", "50-59", "60 and above")
/ required = true
</dropdown>

**************************************************************************************************************
**************************************************************************************************************
	LISTS	
**************************************************************************************************************
**************************************************************************************************************

Means and Standard Deviations published by Carriere et al (2010) (Table 2, p. 572) 
by age groups 1-6

mean number of SART errors (SART errors = commission errors) by age group
<list mean_SARTerrors>
/ items = (14.28, 11.26, 9.92, 10.31, 8.91, 8.86)
/ selectionmode = values.ageGroup
</list>

<list SD_SARTerrors>
/ items = (5.04, 5.84, 5.43, 5.51, 5.93, 5.24)
/ selectionmode = values.ageGroup
</list>


mean go latencies in ms by age group
<list mean_RT>
/ items = (322.18, 340.64, 367.11, 356.10, 413.72, 416.16)
/ selectionmode = values.ageGroup
</list>

<list SD_RT>
/ items = (79.18, 76.38, 75.46, 68.60, 90.26, 89.02)
/ selectionmode = values.ageGroup
</list>

mean RTCV (in ms) = reaction time coefficient of variation (SD RT/mean RT) by age group
<list mean_RTCV>
/ items = (0.32, 0.28, 0.27, 0.25, 0.27, 0.27)
/ selectionmode = values.ageGroup
</list>

<list SD_RTCV>
/ items = (0.13, 0.12, 0.11, 0.08, 0.09, 0.11)
/ selectionmode = values.ageGroup
</list>

mean number of Anticipatory responses by age group
<list mean_Anticipatory>
/ items = (7.86, 3.23, 1.96, 1.27, 1.92, 0.84)
/ selectionmode = values.ageGroup
</list>

<list SD_Anticipatory>
/ items = (10.07, 6.72, 3.95, 2.15, 5.48, 1.21)
/ selectionmode = values.ageGroup
</list>

mean number of omission errors by age group
<list mean_Omissions>
/ items = (4.71, 2.52, 2.78, 2.61, 2.97, 2.93)
/ selectionmode = values.ageGroup
</list>

<list SD_Omissions>
/ items = (5.17, 3.74, 4.42, 3.60, 4.01, 4.77)
/ selectionmode = values.ageGroup
</list>

**************************************************************************************************************
**************************************************************************************************************
	TRIALS 	
**************************************************************************************************************
**************************************************************************************************************

<surveypage Demographics>
/ questions = [1 = age]
/ showpagenumbers = false
/ showquestionnumbers = false
/ finishlabel = "submit"
/ nextbuttonposition = (50%, 90%)
/ ontrialend = [
	if (dropdown.age.response == "19 and younger"){
		values.ageGroup = 1;
	} else if (dropdown.age.response == "20-29"){
		values.ageGroup = 2;
	} else if (dropdown.age.response == "30-39"){
		values.ageGroup = 3;
	} else if (dropdown.age.response == "40-49"){
		values.ageGroup = 4;
	} else if (dropdown.age.response == "50-59"){
		values.ageGroup = 5;
	} else {
		values.ageGroup = 6;
	};		

	expressions.calculate_Norms;
]
</surveypage>

**************************************************************************************************************
**************************************************************************************************************
	BLOCKS
**************************************************************************************************************
**************************************************************************************************************

<survey SART_demographics>
/ pages = [1 = Demographics]
</survey>

**************************************************************************************************************
												End of File
**************************************************************************************************************