facet_wrap('variable',scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
d <- summarySE(event_data,measurevar='RT',groupvars=c('time','type','stimblock','subject'),na.rm=T)
ggplot(d,aes(x=time,y=RT,color=stimblock,group=stimblock))+
geom_vline(xintercept='t0')+
geom_point()+
geom_errorbar(aes(ymin=RT-ci,ymax=RT+ci),width=0.2)+
geom_line()+
facet_grid(type~subject,scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
head(event_data)
names(d$type)
unique(d$type)
d$type <- as.factor(d$type)
levels(d$type)
dput(levels(d$type))
levels(d$type) <- c("anticipation error", "comission error", "general error", "omission error")
ggplot(d,aes(x=time,y=RT,color=stimblock,group=stimblock))+
geom_vline(xintercept='t0')+
geom_point()+
geom_errorbar(aes(ymin=RT-ci,ymax=RT+ci),width=0.2)+
geom_line()+
facet_grid(type~subject,scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(d,aes(x=time,y=RT,color=stimblock,group=stimblock))+
geom_vline(xintercept='t0')+
geom_point()+
geom_errorbar(aes(ymin=RT-ci,ymax=RT+ci),width=0.2)+
geom_line()+
facet_grid(subject~type,scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
levels(d$type) <- c("general error", "anticipation error", "comission error", "omission error")
ggplot(d,aes(x=time,y=RT,color=stimblock,group=stimblock))+
geom_vline(xintercept='t0')+
geom_point()+
geom_errorbar(aes(ymin=RT-ci,ymax=RT+ci),width=0.2)+
geom_line()+
facet_grid(subject~type,scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
d <- summarySE(event_data,measurevar='RT',groupvars=c('time','type','stimblock','subject'),na.rm=T)
d$type <- as.factor(d$type)
levels(d$type) <- c("anticipation error", "comission error", "general error", "omission error")
d$type <- relevel(d$type,'general error')
ggplot(d,aes(x=time,y=RT,color=stimblock,group=stimblock))+
geom_vline(xintercept='t0')+
geom_point()+
geom_errorbar(aes(ymin=RT-ci,ymax=RT+ci),width=0.2)+
geom_line()+
facet_grid(subject~type,scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
facet_grid(subject~type+
ggplot(d,aes(x=time,y=RT,color=stimblock,group=stimblock))+
geom_vline(xintercept='t0')+
geom_point()+
geom_errorbar(aes(ymin=RT-ci,ymax=RT+ci),width=0.2)+
geom_line()+
facet_grid(subject~type)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(d,aes(x=time,y=RT,color=stimblock,group=stimblock))+
geom_vline(xintercept='t0')+
geom_point()+
geom_errorbar(aes(ymin=RT-ci,ymax=RT+ci),width=0.2)+
geom_line()+
facet_grid(subject~type,scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=trialcode,group=trialcode,shape=stimblock))+
geom_point(size=3)+
geom_line()+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=trialcode,group=trialcode,shape=stimblock))+
geom_point(size=3)+
geom_line()+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
d <- summarySE(data[data$blocknum>0,],measurevar='correct',groupvars=c('blocknum','stimblock','trialcode','subject'))
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=trialcode,group=trialcode,shape=stimblock))+
geom_point(size=3)+
geom_line()+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=stimblock,group=stimblock,shape=trialcode))+
geom_point(size=3)+
geom_line()+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
d <- summarySE(data[data$blocknum>0,],measurevar='correct',groupvars=c('blocknum','stimblock','trialcode','subject'))
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=stimblock,group=stimblock,shape=trialcode))+
geom_point(size=3)+
geom_line()+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3)+
geom_line()+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3)+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3,position=position_dodge(0.2))+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3,position=position_dodge(0.2))+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1,
position=position_dodge(0.2))+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3,position=position_dodge(0.3))+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1,
position=position_dodge(0.3))+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=values.RT,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3)+
geom_line()+
geom_errorbar(aes(ymin=values.RT-ci,ymax=values.RT+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('trialcode')+
ylab('Reaction Time (ms)')
d <- summarySE(data[data$blocknum>0,],measurevar='values.RT',groupvars=c('blocknum','stimblock','subject','trialcode'))
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=values.RT,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3)+
geom_line()+
geom_errorbar(aes(ymin=values.RT-ci,ymax=values.RT+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('trialcode')+
ylab('Reaction Time (ms)')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=values.RT,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3)+
geom_line()+
geom_errorbar(aes(ymin=values.RT-ci,ymax=values.RT+ci),width=0.1)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('Reaction Time (ms)')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=values.RT,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3,position=position_dodge(0.3))+
geom_errorbar(aes(ymin=values.RT-ci,ymax=values.RT+ci),width=0.1,
position=position_dodge(0.3))+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('Reaction Time (ms)')
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3,position=position_dodge(0.3))+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1,
position=position_dodge(0.3))+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
d <- summarySE(data[data$blocknum>0,],measurevar='correct',groupvars=c('blocknum','stimblock','trialcode','subject'))
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=correct,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3,position=position_dodge(0.3))+
geom_errorbar(aes(ymin=correct-ci,ymax=correct+ci),width=0.1,
position=position_dodge(0.3))+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('accuracy')
d <- summarySE(data[data$blocknum>0,],measurevar='values.RT',groupvars=c('blocknum','stimblock','subject','trialcode'))
ggplot(d[d$blocknum>0,],aes(x=blocknum,y=values.RT,color=stimblock,group=trialcode,shape=trialcode))+
geom_point(size=3,position=position_dodge(0.3))+
geom_errorbar(aes(ymin=values.RT-ci,ymax=values.RT+ci),width=0.1,
position=position_dodge(0.3))+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)+
facet_wrap('subject')+
ylab('Reaction Time (ms)')
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("ntargets"),],
aes(x=blocknum,y=value,color=subject,group=subject,shape=stimblock))+
geom_point()+
geom_line()+
facet_wrap('variable',scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,color=subject,group=subject,shape=stimblock))+
geom_point()+
geom_line()+
facet_wrap('variable',scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,color=subject,group=subject,shape=stimblock))+
geom_bar()+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,color=subject,group=subject,shape=stimblock))+
geom_bar(stat='identity')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,color=subject,group=subject,shape=stimblock))+
geom_bar(stat='identity',beside=T)+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,color=subject,group=subject,shape=stimblock))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=stimblock))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=variablle))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=variable))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=variable))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_fill_manual(values=myPalette)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=variable))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_fill_viridis_b()
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=variable))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_fill_viridis_d()
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=variable))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_fill_viridis_d(end=8)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=variable))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_fill_viridis_d(end=0.8)
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=variable))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_fill_viridis_d(end=0.8,labels=c('label1', 'label2', 'label3'))
ggplot(accuracy.summary[accuracy.summary$blocknum>0 &
accuracy.summary$variable %in%
c("n_targets","n_distractors",'total'),],
aes(x=blocknum,y=value,fill=variable))+
geom_bar(stat='identity',position=position_dodge())+
ggpubr::theme_pubclean()+
scale_fill_viridis_d(end=0.8,labels=c('NOGO', 'GO', 'Total'))
d <- summarySE(event_data,measurevar='RT',groupvars=c('time','type','stimblock','subject'),na.rm=T)
d$type <- as.factor(d$type)
levels(d$type) <- c("anticipation error", "comission error", "general error", "omission error")
d$type <- relevel(d$type,'general error')
ggplot(d,aes(x=time,y=RT,color=stimblock,group=stimblock))+
geom_vline(xintercept='t0')+
geom_point()+
geom_errorbar(aes(ymin=RT-ci,ymax=RT+ci),width=0.2)+
geom_line()+
facet_grid(subject~type,scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
d <- summarySE(event_data,measurevar='RT',groupvars=c('time','type','stimblock','subject'),na.rm=T)
d$type <- as.factor(d$type)
levels(d$type) <- c("anticipation error", "comission error", "all errors", "omission error")
d$type <- relevel(d$type,'all errors')
ggplot(d,aes(x=time,y=RT,color=stimblock,group=stimblock))+
geom_vline(xintercept='t0')+
geom_point()+
geom_errorbar(aes(ymin=RT-ci,ymax=RT+ci),width=0.2)+
geom_line()+
facet_grid(subject~type,scales='free')+
ggpubr::theme_pubclean()+
scale_color_manual(values=myPalette)
head(event_data)
plot(data$ommission_error)
plot(data$commission_error)
head(data)
unique(data$response)
tail(data)
data[data$trialcode=='nogo',]
library(hablar)
library(stringr)
library(Rmisc)
library(zoo)
library(tidyverse)
myPalette <- c("#8961b3","#b55960","#999c47")
# define custom functions
adjust_idx <- function(idx,btrial){
# check that idx isn't greater than limits of vector
idx_start = idx-4
if(idx_start<1){
idx_start = 1
}
idx_stop = idx+4
if(idx_stop>length(btrial)){
idx_stop=length(btrial)
}
# # check that idx doesn't cross block boundaries (changed to looping over blocks)
# while(btrial[idx_start]>btrial[idx]){
#   idx_start=idx_start+1
# }
# while(btrial[idx_stop]<btrial[idx]){
#   idx_stop=idx_stop-1
# }
return(c(idx_start,idx_stop))
}
get_event_matrix <- function(idx_vector,data_vector,btrial){
event_matrix = matrix(data=NA,nrow=length(idx_vector),ncol=9)
counter <- 1
for(idx in idx_vector){
idx_start_stop <- adjust_idx(idx,btrial)
midx_start <- 5-(idx-idx_start_stop[1])
midx_stop <- 5+(idx_start_stop[2]-idx)
event_matrix[counter,midx_start:midx_stop] <- data_vector[idx_start_stop[1]:idx_start_stop[2]]
counter <- counter+1
}
return(event_matrix)
}
make_event_df <- function(idx,RT,btrial,matrix_names,event_type){
if(!is_empty(idx)){
RT = get_event_matrix(idx,RT,btrial)
event_df <- data.frame(RT)
names(event_df) <- matrix_names
event_df <- reshape2::melt(event_df)
event_df$type <- event_type
}else{
event_df <- data.frame(matrix(ncol=3,nrow=0))
names(event_df) <- c('variable','value','type')
}
return(event_df)
}
# need to add block ids
calc_event_metrics <- function(accuracy,RT,anticipations,comissions,omissions,btrial){
matrix_names <- c('t-4','t-3','t-2','t-1','t0','t+1','t+2','t+3','t+4')
# find ids of errors and collect RTs
idx = which(accuracy==0)
event_data <-  make_event_df(idx,RT,btrial,matrix_names,event_type)
# find ids of correct trials and collect RTs
idx = which(accuracy==1)
tmp <-  make_event_df(idx,RT,btrial,matrix_names,event_type)
event_data <- rbind(event_data,tmp)
# find ids of go trials and collect RTs
idx = which(trialcode=='go')
tmp <-  make_event_df(idx,RT,btrial,matrix_names,event_type)
event_data <- rbind(event_data,tmp)
# find ids of anticipations and collect RTs
idx = which(trialcode=='nogo')
tmp <-  make_event_df(idx,RT,btrial,matrix_names,event_type)
event_data <- rbind(event_data,tmp)
# find ids of anticipations and collect RTs
idx = which(anticipations==1)
tmp <-  make_event_df(idx,RT,btrial,matrix_names,event_type)
event_data <- rbind(event_data,tmp)
# find ids of commissions and collect RTs
idx = which(commissions==1)
tmp <-  make_event_df(idx,RT,btrial,matrix_names,event_type)
event_data <- rbind(event_data,tmp)
# find ids of omissions and collect RTs
idx = which(omissions==1)
tmp <-  make_event_df(idx,RT,btrial,matrix_names,event_type)
event_data <- rbind(event_data,tmp)
# clean up data frame
names(event_data) <- c('time','RT','type')
event_data$time <- factor(event_data$time,levels = matrix_names)
return(event_data)
}
# define custom color palette
myPalette <- c("#8961b3","#b55960","#999c47")
data_dir <- getwd()
data_dir <- sub('/Code/R','/Data/SART_Microstudy',data_dir)
file_names <- list.files(path=data_dir,pattern='*.csv')
#### prepare data ####
make_table=1
for(f in file_names){
tmp <- read_csv(str_c(data_dir,'/',f))
tmp <- tmp %>% retype()
tmp$stimblock = 0
if(any(tmp$blocknum>0)){
if(all(tmp$subject %% 2 == 0)){
tmp[tmp$blocknum<3,]$stimblock =1
}else{
tmp[tmp$blocknum>2,]$stimblock =1
}
}
if(make_table==1){
data <- tmp
make_table=0
}else{
data <- rbind(data,tmp)
}
}
# fix PID for first participant
data[data$subject==101,]$subject <- 501
# create trial number within block variable
data <- data %>% group_by(subject,blocknum) %>% mutate(btrial = row_number())
# change variables to factors
data$stimblock <- as.factor(data$stimblock)
data$subject <- as.factor(data$subject)
#### Compute additional metrics ####
# 1. Accuracy
# 1.1 Errors of commission (failure to withhold a response to target)
data$commission_error <- ifelse(data$trialcode=='go',0,
ifelse(data$correct==0,1,0))
# 1.2 Errors of omission (failure to respond to non-target)
data$omission_error <- ifelse(data$trialcode=='nogo',0,
ifelse(data$correct==0,1,0))
# 2. Speed / Efficiency of processing
# 2.1. Percentage anticipations (RT < 100ms) (Cheyne et al., 2009)
data$anticipation <- ifelse(data$values.RT<100 & data$values.RT>0,1,0)
# 2.2 Lag RT (average of 8 trials surrounding anticipation or omission)
data <- data %>% group_by(blocknum) %>%
mutate(rollingmean = rollmean(values.RT,k=9,fill=NA))
# 3. Summary stats
# 3.1 Event related metrics
make_df <- 1
for(s in unique(data$subject)){
for(b in unique(data$blocknum)){
data_in <- data[data$blocknum==b & data$subject==s,]
tmp <- calc_event_metrics(data_in$correct,data_in$values.RT,
data_in$anticipation,
data_in$commission_error,
data_in$omission_error,
data_in$btrial)
tmp$blocknum <- b
tmp$subject <- s
if(make_df){
event_data <- tmp
make_df <- 0
}else{
event_data <- rbind(event_data,tmp)
}
}
}
